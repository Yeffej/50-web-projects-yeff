/* CREATING MY OWN PROPS TO BE ABLE TO TRANSTION LINEAR-GRANDIENTS */
@property --switchColor1 {
  syntax: '<color>';
  initial-value: #fff;
  inherits: false;
}

@property --switchColor2 {
  syntax: '<color>';
  initial-value: #ccc;
  inherits: false;
}

@property --switchBallColor1 {
  syntax: '<color>';
  initial-value: #ffb703;
  inherits: false;
}

@property --switchBallColor2 {
  syntax: '<color>';
  initial-value: #fb8500;
  inherits: false;
}


* {
    margin: 0;
    padding: 0;
}

body {
    width: 100%;
    height: 100vh;
    display: grid;
    place-content: center;
}

label {
    width: 250px;
    height: 100px;
    border-radius: 100px;
    display: block;
    background: linear-gradient(to right, var(--switchColor1), var(--switchColor2));
    box-shadow: inset 1px 1px 5px #333, inset -1px -1px 5px #bebebe;
    position: relative;
    cursor: pointer;
    transition: --switchColor1 1s, --switchColor2 1s;
}

input {
    visibility: hidden;
    pointer-events: none;
}

label::before {
    content: " ";
    width: 80px;
    height: 80px;
    border-radius: 80px;
    background: linear-gradient(to bottom, var(--switchBallColor1), var(--switchBallColor2));
    transition: all 0.5s, --switchBallColor1 1s, --switchBallColor2 1s;

    position: absolute;
    top: 50%;
    left: calc(0% + 10px);
    transform: translate(0%, -50%);
}

label:active::before {
    width: 120px;
}
input:checked + label {
    --switchColor1: #212529;
    --switchColor2: #000;
}
input:checked + label::before {
    left: calc(100% - 10px);
    transform: translate(-100%, -50%);
    --switchBallColor1: #333533;
    --switchBallColor2: #202020;
}


.icons {
    font-size: 100px;
    color: #000;
}

.background {
    position: fixed;
    inset: 0;
    z-index: -1;
    background-color: #fff;
    transition: background-color 1s;
}
input:checked ~ .background {
    background-color: #222;
}